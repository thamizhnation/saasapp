import { z, type ZodType } from "zod";
export declare const PageName: z.ZodEffects<z.ZodString, string, string>;
export declare const PageTitle: z.ZodEffects<z.ZodString, string, string>;
export declare const HomePagePath: z.ZodEffects<z.ZodString, string, string>;
export declare const pathValidators: (baseValidator: ZodType<string>) => ZodType<string>;
export declare const PagePath: z.ZodType<string, z.ZodTypeDef, string>;
declare const Page: z.ZodObject<{
    path: z.ZodType<string, z.ZodTypeDef, string>;
    id: z.ZodString;
    name: z.ZodEffects<z.ZodString, string, string>;
    title: z.ZodEffects<z.ZodString, string, string>;
    meta: z.ZodRecord<z.ZodString, z.ZodString>;
    rootInstanceId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    path: string;
    name: string;
    meta: Record<string, string>;
    id: string;
    title: string;
    rootInstanceId: string;
}, {
    path: string;
    name: string;
    meta: Record<string, string>;
    id: string;
    title: string;
    rootInstanceId: string;
}>;
export type Page = z.infer<typeof Page>;
export declare const Pages: z.ZodType<{
    homePage: Page;
    pages: Array<Page>;
}>;
export type Pages = z.infer<typeof Pages>;
export {};
