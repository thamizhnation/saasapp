import { type ReactNode, type ForwardRefExoticComponent, type ComponentPropsWithRef } from "react";
import { Root, Content } from "@radix-ui/react-collapsible";
import { type Hook } from "@webstudio-is/react-sdk";
export declare const Collapsible: ForwardRefExoticComponent<Omit<ComponentPropsWithRef<typeof Root>, "defaultOpen" | "asChild">>;
/**
 * We're not exposing the 'asChild' property for the Trigger.
 * Instead, we're enforcing 'asChild=true' for the Trigger and making it style-less.
 * This avoids situations where the Trigger inadvertently passes all styles to its child,
 * which would prevent us from displaying styles properly in the builder.
 */
export declare const CollapsibleTrigger: ForwardRefExoticComponent<{
    children: ReactNode;
} & import("react").RefAttributes<HTMLButtonElement>>;
export declare const CollapsibleContent: ForwardRefExoticComponent<Omit<ComponentPropsWithRef<typeof Content>, "asChild">>;
export declare const hooksCollapsible: Hook;
