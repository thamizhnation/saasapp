import { type ForwardRefExoticComponent, type ComponentPropsWithRef } from "react";
import { Header, Trigger, Content } from "@radix-ui/react-accordion";
import { type Hook } from "@webstudio-is/react-sdk";
export declare const Accordion: ForwardRefExoticComponent<Omit<Omit<import("@radix-ui/react-accordion").AccordionSingleProps & import("react").RefAttributes<HTMLDivElement>, "ref">, "type" | "value" | "defaultValue" | "asChild" | "onValueChange"> & {
    value: string;
    onValueChange: (value: string) => void;
} & import("react").RefAttributes<HTMLDivElement>>;
export declare const AccordionItem: ForwardRefExoticComponent<Omit<Omit<import("@radix-ui/react-accordion").AccordionItemProps & import("react").RefAttributes<HTMLDivElement>, "ref">, "value"> & {
    value?: string | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
export declare const AccordionHeader: ForwardRefExoticComponent<Omit<ComponentPropsWithRef<typeof Header>, "asChild">>;
export declare const AccordionTrigger: ForwardRefExoticComponent<Omit<ComponentPropsWithRef<typeof Trigger>, "asChild">>;
export declare const AccordionContent: ForwardRefExoticComponent<Omit<ComponentPropsWithRef<typeof Content>, "asChild">>;
export declare const hooksAccordion: Hook;
